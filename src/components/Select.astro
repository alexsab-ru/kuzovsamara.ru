---
interface Props {
	name?: string;
	placeholder?: string;
	options?: string[];
}
const { name, placeholder = 'Выберите...', options = [] } = Astro.props;
const data = JSON.stringify({open: false, select: null, placeholder, options });
import { Icon } from 'astro-icon';
---

{ options.length ?
<div
	class="select relative w-full"
	x-data={data}
>
	<input
		type="text"
		name={name}
		class="absolute w-0 h-0 invisible opacity-0 hidden"
		x-model="select"
	/>
	<div
		class="bg-white flex justify-between items-center h-[48px] border-2 border-transparent transition-all focus:border-accent-500 pl-4 pr-2 py-2 outline-none w-full cursor-pointer"
		:class="select ? 'text-black' : 'text-black/50'"
		@keydown.enter="open = !open"
		@keydown.space="open = !open"
		@click="open = !open"
		@keydown.escape="open = false"
		tabindex="0"
	>
		<span x-text="select ?? placeholder" class="select-none"></span>
		<Icon name="mdi:chevron-down" class="origin-center transition-transform w-5" :class="{'-rotate-180': open}" />
	</div>
	<div
		x-show="open"
		x-cloak
		@click.outside="open = false"
		class="absolute top-full w-full bg-white shadow-xl border-t text-black z-[100]"
	>
		<template x-for="(option, idx) in options" :key="idx">
			<a
				href="#"
				class="block px-4 py-2 transition-colors hover:bg-gray-100 select-none"
				@click.prevent="select = option; open = false"
				:class="{'!bg-gray-200': select === option}"
				x-text="option"
			></a>
		</template>
	</div>
</div>
:
<p class="text-red-600 h-full flex items-center justify-center font-bold">Вы не указали массив опций</p>
}
